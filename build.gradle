/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

plugins {
    id 'org.springframework.boot' version '3.5.0' // use your version
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api myLibs.org.springframework.boot.spring.boot.starter.web
    api libs.org.springframework.ai.spring.ai.advisors.vector.store
    api libs.org.springframework.ai.spring.ai.starter.model.ollama
    api libs.org.springframework.ai.spring.ai.starter.vector.store.mongodb.atlas
    api libs.io.rest.assured.rest.assured
    api libs.org.testng.testng
    api libs.org.springframework.boot.spring.boot.starter.test
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'rest.automation.suite'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.named('bootJar') {
    archiveFileName = 'app.jar'
}

tasks.named('test') {
    def groupsToRun = System.getProperty('groups')
    useTestNG() {
        if (groupsToRun != null && !groupsToRun.trim().isEmpty()) {
            includeGroups groupsToRun
        }
        excludeGroups "SKIP_TEST"
        useDefaultListeners = true
    }
}
